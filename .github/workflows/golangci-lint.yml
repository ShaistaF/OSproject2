name: golangci-lint

on:
  push:
    tags:
      - v*
    branches:
      - master
      - main
  pull_request:

permissions:
  contents: read
  # Uncomment the following line if you use the `only-new-issues` option and need access to pull request data.
  # pull-requests: read

jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod

      - name: Cache Go Modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      
      - name: Cache GolangCI-Lint
        uses: actions/cache@v3
        with:
          path: ~/.cache/golangci-lint
          key: ${{ runner.os }}-golangci-lint-${{ hashFiles('**/.golangci.yml') }}
          restore-keys: |
            ${{ runner.os }}-golangci-lint-

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: 'latest'
          # Uncomment and set this if your project structure requires it:
          # working-directory: somedir
          
          # Customize golangci-lint command line arguments if needed:
          # args: --issues-exit-code=0 --config .golangci.yml

          # Show only new issues if it's a pull request:
          # only-new-issues: true

          # Disable caching if needed:
          # skip-cache: false
          # skip-pkg-cache: false
          # skip-build-cache: false

